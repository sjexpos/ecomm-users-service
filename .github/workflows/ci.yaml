name: CI
on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main" ]
    
jobs:

  build-app:
    name: Build Application
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4.2.2
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Extract version
        run: |
          version_value=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "version=$version_value"
          echo "version=$version_value" >> $GITHUB_ENV
      - run: mvn --batch-mode --update-snapshots install
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload artifacts
        id: upload-compiled-sources
        uses: actions/upload-artifact@v4.3.3
        with:
          name: compiled-sources
          path: ./
      - name: Publish users-service-api
        uses: actions/upload-artifact@v4.3.3
        with:
          name: users-service-api
          path: ./api/target/users-service-api-${{ env.version }}.jar
      - name: Publish users-service-sdk
        uses: actions/upload-artifact@v4.3.3
        with:
          name: users-service-sdk
          path: ./sdk/target/users-service-sdk-${{ env.version }}.jar
    outputs:
      compiled-sources-artifact-id: ${{ steps.upload-compiled-sources.outputs.artifact-id }}

  build-docker-image:
    name: Create docker image & publish
    needs: [build-app]
    runs-on: ubuntu-latest
    steps:
      - name: Download compiled sources
        uses: actions/download-artifact@v4.1.7
        with:
          name: compiled-sources
          path: ./
      - name: Docker build and publish
        uses: sjexpos/ecomm-cicd-actions/.github/actions/docker-build-and-publish@main
        with:
          registry_user: ${{ secrets.DOCKERHUB_USERNAME }}
          registry_token: ${{ secrets.DOCKERHUB_TOKEN }}
          image_name: sjexposecomm/users-service

  delete-unused-artifact:
    name: Delete unused artifact
    needs: [build-app, build-docker-image]
    runs-on: ubuntu-latest
    steps:
      - name: Delete Artifact
        uses: actions/github-script@v7
        with:
          script: |
              github.rest.actions.deleteArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: ${{ needs.build-app.outputs.compiled-sources-artifact-id }}
              });

# mvn jacoco:prepare-agent jacoco:report surefire:test
