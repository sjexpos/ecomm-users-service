<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.oigres.ecomm</groupId>
    <artifactId>users-service-infrastructure</artifactId>
    <version>0.1.0-SNAPSHOT</version>
  </parent>

  <artifactId>users-service-spring-boot</artifactId>
  <name>- Spring boot App</name>

  <properties>
    <start-class>io.oigres.ecomm.service.users.Bootstrap</start-class>
    <tests.db.hostname>localhost</tests.db.hostname>
    <tests.db.port>5432</tests.db.port>
    <tests.db.database>ecomm_test</tests.db.database>
    <tests.db.root.username>root</tests.db.root.username>
    <tests.db.root.password>root</tests.db.root.password>
    <tests.db.username>test</tests.db.username>
    <tests.db.password>test</tests.db.password>
    <tests.opensearch.hostname>localhost</tests.opensearch.hostname>
    <tests.opensearch.port>9200</tests.opensearch.port>
    <tests.redis.hostname>localhost</tests.redis.hostname>
    <tests.redis.port>6379</tests.redis.port>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.oigres.ecomm</groupId>
      <artifactId>users-service-persistence</artifactId>
    </dependency>
    <dependency>
      <groupId>io.oigres.ecomm</groupId>
      <artifactId>users-service-rest-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

<!-- If Jetty is preferred to run as embedded container instead of Tomcat
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jetty</artifactId>
    </dependency>
-->
    <!-- Add Undertow starter dependency 
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-undertow</artifactId>
    </dependency>
    -->
    
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.logging</groupId>
      <artifactId>jboss-logging</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-cache</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-redis</artifactId>
    </dependency>
    <dependency>
      <groupId>org.redisson</groupId>
      <artifactId>redisson-hibernate-6</artifactId>
    </dependency>
    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>s3</artifactId>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>sts</artifactId>
    </dependency>

    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
    </dependency>

    <dependency>
      <groupId>org.hibernate.search</groupId>
      <artifactId>hibernate-search-backend-elasticsearch</artifactId>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.hibernate.search</groupId>
      <artifactId>hibernate-search-backend-elasticsearch-aws</artifactId>
    </dependency>

    <!-- Distributed tracing -->
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-tracing-bridge-otel</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-exporter-otlp</artifactId>
    </dependency>

    <dependency>
      <groupId>net.ttddyy.observation</groupId>
      <artifactId>datasource-micrometer-spring-boot</artifactId>
    </dependency>

    <!-- Prometheus -->
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>

    <!-- Kafka -->
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
    </dependency>

    <!-- Cloud Native Spring Admin connector -->
    <dependency>
      <groupId>de.codecentric</groupId>
      <artifactId>spring-boot-admin-starter-client</artifactId>
    </dependency>

    <!-- Testing -->
    <dependency>
      <groupId>io.oigres.ecomm</groupId>
      <artifactId>users-service-db-scripts</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <includes><include>**/*</include></includes>
        <excludes>
          <exclude>**/.git</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.yaml</include>
        </includes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <includes><include>**/*</include></includes>
        <filtering>true</filtering>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>**/*Test</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <classesDirectory>${project.build.outputDirectory}</classesDirectory>
          <argLine> <!-- it allows to override env vars using JUnit pioneer extension on Java 17 and later  -->
              --add-opens java.base/java.util=ALL-UNNAMED
              --add-opens java.base/java.lang=ALL-UNNAMED
          </argLine>          
          <summaryFile>${project.build.directory}/site/failsafe-summary.xml</summaryFile>
          <includes>
            <include>**/*Test</include>
          </includes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.pitest</groupId>
        <artifactId>pitest-maven</artifactId>
      </plugin>
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>revision</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <verbose>false</verbose>
          <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
          <generateGitPropertiesFile>true</generateGitPropertiesFile>
          <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
          <failOnNoGitDirectory>false</failOnNoGitDirectory>
          <offline>true</offline>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>repackage</id>
            <goals>
              <goal>repackage</goal>
              <goal>build-info</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <mainClass>${start-class}</mainClass>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <inherited>false</inherited>
        <executions>
          <execution>
            <id>copy-reports</id>
            <phase>site</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <mkdir dir="${maven.multiModuleProjectDirectory}/target/site/users-service-infrastructure/${project.artifactId}"/>
                <copy  todir="${maven.multiModuleProjectDirectory}/target/site/users-service-infrastructure/${project.artifactId}">
                  <fileset dir="target/site" includes="**/*" erroronmissingdir="false"/>
                  <fileset dir="target" includes="spotbugs.html" erroronmissingdir="false"/>
                </copy>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>local-windows</id>
      <activation>
        <os><family>windows</family></os>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>local-unix</id>
      <activation>
        <os><family>unix</family></os>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-database-scripts</id>
                <phase>package</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <includeScope>test</includeScope>
                  <excludeTransitive>true</excludeTransitive>
                  <outputDirectory>${project.build.directory}/scripts</outputDirectory>
                  <artifactItems>
                    <artifactItem>
                      <groupId>io.oigres.ecomm</groupId>
                      <artifactId>users-service-db-scripts</artifactId>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>prepare-it-database</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
                <configuration>
                  <skip>${skipTests}</skip>
                  <images>
                    <image>
                      <name>postgres:14.4</name>
                      <alias>it-database</alias>
                      <run>
                        <env>
                          <POSTGRES_DB>${tests.db.database}</POSTGRES_DB>
                          <POSTGRES_USER>${tests.db.root.username}</POSTGRES_USER>
                          <POSTGRES_PASSWORD>${tests.db.root.password}</POSTGRES_PASSWORD>
                          <TEST_USER>${tests.db.username}</TEST_USER>
                          <TEST_PASSWORD>${tests.db.password}</TEST_PASSWORD>
                        </env>
                        <ports>
                          <port>5432:${tests.db.port}</port>
                        </ports>
                        <tmpfs>
                          <mount>/var/lib/postgresql/data</mount>
                        </tmpfs>
                        <volumes>
                          <bind>
                            <volume>src/test/docker/init-postgres.sh:/docker-entrypoint-initdb.d/init-db.sh</volume>
                          </bind>
                        </volumes>
                        <wait>
                          <tcp>
                            <ports>
                              <port>${tests.db.port}</port>
                            </ports>
                          </tcp>
                          <time>20000</time>
                        </wait>
                        <log>
                          <enabled>true</enabled>
                          <prefix>[POSTGRES-14.4]</prefix>
                          <date>NONE</date>
                          <color>blue</color>
                        </log>
                      </run>
                    </image>
                  </images>
                </configuration>
              </execution>
              <execution>
                <id>prepare-it-opensearch</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
                <configuration>
                  <skip>${skipTests}</skip>
                  <images>
                    <image>
                      <name>opensearchproject/opensearch:2.16.0</name>
                      <alias>it-opensearch</alias>
                      <run>
                        <env>
                          <discovery.type>single-node</discovery.type>
                          <cluster.name>opensearch-cluster</cluster.name>
                          <node.name>opensearch</node.name>
                          <bootstrap.memory_lock>true</bootstrap.memory_lock>
                          <OPENSEARCH_JAVA_OPTS>-Xms512m -Xmx512m</OPENSEARCH_JAVA_OPTS>
                          <DISABLE_INSTALL_DEMO_CONFIG>true</DISABLE_INSTALL_DEMO_CONFIG>
                          <DISABLE_SECURITY_PLUGIN>true</DISABLE_SECURITY_PLUGIN>
                        </env>
                        <ports>
                          <port>9200:${tests.opensearch.port}</port>
                          <port>9600:9600</port>
                        </ports>
                        <tmpfs>
                          <mount>/usr/share/opensearch/data:mode=777</mount>
                        </tmpfs>
                        <ulimits>
                          <ulimit>
                            <name>memlock</name>
                            <hard>-1</hard>
                            <soft>-1</soft>
                          </ulimit>
                          <ulimit>
                            <name>nofile</name>
                            <hard>65536</hard>
                            <soft>65536</soft>
                          </ulimit>
                        </ulimits>
                        <wait>
                          <tcp>
                            <ports>
                              <port>${tests.opensearch.port}</port>
                            </ports>
                          </tcp>
                          <time>20000</time>
                        </wait>
                        <log>
                          <enabled>true</enabled>
                          <prefix>[OPENSEARCH-1.2.4]</prefix>
                          <date>NONE</date>
                          <color>green</color>
                        </log>
                      </run>
                    </image>
                  </images>
                </configuration>
              </execution>
              <execution>
                <id>prepare-it-redis</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
                <configuration>
                  <skip>${skipTests}</skip>
                  <images>
                    <image>
                      <name>redis:6.2.2</name>
                      <alias>it-redis</alias>
                      <run>
                        <ports>
                          <port>6379:${tests.redis.port}</port>
                        </ports>
                        <wait>
                          <tcp>
                            <ports>
                              <port>${tests.redis.port}</port>
                            </ports>
                          </tcp>
                          <time>20000</time>
                        </wait>
                        <log>
                          <enabled>true</enabled>
                          <prefix>[REDIS-6.2.2]</prefix>
                          <date>NONE</date>
                          <color>yellow</color>
                        </log>
                      </run>
                    </image>
                  </images>
                </configuration>
              </execution>
              <execution>
                <id>prepare-it-localstack</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
                <configuration>
                  <skip>${skipTests}</skip>
                  <images>
                    <image>
                      <name>localstack/localstack-full:0.12.11</name>
                      <alias>it-localstack</alias>
                      <run>
                        <env>
                          <START_WEB>1</START_WEB>
                          <DEBUG>0</DEBUG>
                          <HOSTNAME>localstack</HOSTNAME>
                          <HOSTNAME_EXTERNAL>localstack</HOSTNAME_EXTERNAL>
                          <PORT_WEB_UI>8888</PORT_WEB_UI>
                          <IMAGE_NAME>localstack/localstack-full:0.12.11</IMAGE_NAME>
                          <DEFAULT_REGION>us-east-1</DEFAULT_REGION>
                          <LS_LOG>INFO</LS_LOG>
                          <LAMBDA_EXECUTOR>docker</LAMBDA_EXECUTOR>
                          <LAMBDA_REMOTE_DOCKER>false</LAMBDA_REMOTE_DOCKER>
                          <LAMBDA_DOCKER_NETWORK>kind</LAMBDA_DOCKER_NETWORK>
                          <DOCKER_HOST>unix:///var/run/docker.sock</DOCKER_HOST>
                          <HOST_TMP_FOLDER>/tmp/localstack</HOST_TMP_FOLDER>
                          <KINESIS_PROVIDER>kinesalite</KINESIS_PROVIDER>
                          <AWS_CBOR_DISABLE>1</AWS_CBOR_DISABLE>
                        </env>
                        <volumes>
                          <bind>
                            <volume>/var/run/docker.sock:/var/run/docker.sock</volume>
                          </bind>
                        </volumes>
                        <ports>
                          <port>4566:4566</port>
                          <port>4571:4571</port>
                        </ports>
                        <wait>
                          <tcp>
                            <ports>
                              <port>4566</port>
                            </ports>
                          </tcp>
                          <time>20000</time>
                        </wait>
                        <log>
                          <enabled>true</enabled>
                          <prefix>[LOCALSTACK-6.2.2]</prefix>
                          <date>NONE</date>
                          <color>red</color>
                        </log>
                      </run>
                    </image>
                  </images>
                </configuration>
              </execution>
              <execution>
                <id>remove-it-database</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-maven-plugin</artifactId>
            <configuration>
              <driver>org.postgresql.Driver</driver>
              <table>flyway_schema_history</table>
              <locations>filesystem:target/scripts/release*,filesystem:target/test-classes/*.sql</locations>
              <failOnMissingLocations>true</failOnMissingLocations>
              <sqlMigrationPrefix>V</sqlMigrationPrefix>
              <repeatableSqlMigrationPrefix>R</repeatableSqlMigrationPrefix>
              <sqlMigrationSeparator>__</sqlMigrationSeparator>
              <sqlMigrationSuffixes>.sql</sqlMigrationSuffixes>
              <encoding>UTF-8</encoding>
              <validateOnMigrate>true</validateOnMigrate>
              <placeholderReplacement>true</placeholderReplacement>
            </configuration>
            <executions>
              <execution>
                <id>migrate-db</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>migrate</goal>
                </goals>
                <configuration>
                  <skip>${skipTests}</skip>
                  <url>jdbc:postgresql://${tests.db.hostname}:${tests.db.port}/${tests.db.database}</url>
                  <user>${tests.db.root.username}</user>
                  <password>${tests.db.root.password}</password>
                  <schemas>public</schemas>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>report</report>
              <report>report-integration</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.pitest</groupId>
        <artifactId>pitest-maven</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

</project>
