<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <name>Ecomm - Users service</name>
  <description />
  <groupId>io.oigres.ecomm</groupId>
  <artifactId>users-service</artifactId>
  <packaging>pom</packaging>
  <version>0.1.0-SNAPSHOT</version>

  <inceptionYear>2022</inceptionYear>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>21</java.version>
    <maven.version>3.8.8</maven.version>
    <maven.resources.includeEmptyDirs>true</maven.resources.includeEmptyDirs>
    <maven.resources.overwrite>true</maven.resources.overwrite>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <maven-enforcer-plugin.version>3.5.0</maven-enforcer-plugin.version>
    <spotless-maven-plugin.version>2.43.0</spotless-maven-plugin.version>
    <duplicate-finder-maven-plugin.version>2.0.1</duplicate-finder-maven-plugin.version>
    <modernizer-maven-plugin.version>3.1.0</modernizer-maven-plugin.version>
    <spotbugs-maven-plugin.version>4.8.6.2</spotbugs-maven-plugin.version>
    <maven-clean-plugin.version>3.4.0</maven-clean-plugin.version>
    <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
    <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
    <maven-surefire-plugin.version>3.3.1</maven-surefire-plugin.version>
    <maven-surefire-report-plugin.version>3.3.1</maven-surefire-report-plugin.version>
    <maven-failsafe-plugin.version>3.3.1</maven-failsafe-plugin.version>
    <maven-assembly-plugin.version>3.7.1</maven-assembly-plugin.version>
    <maven-dependency-plugin.version>3.7.1</maven-dependency-plugin.version>
    <maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>
    <maven-deploy-plugin.version>3.1.2</maven-deploy-plugin.version>
    <flyway-maven-plugin.version>10.9.1</flyway-maven-plugin.version>
    <git-commit-id-plugin.version>4.9.10</git-commit-id-plugin.version>
    <build-helper-maven-plugin.version>3.6.0</build-helper-maven-plugin.version>
    <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
    <fabric8-maven-plugin.version>0.45.0</fabric8-maven-plugin.version>
    <spring-boot-maven-plugin.version>3.3.2</spring-boot-maven-plugin.version>
    <copy-rename-maven-plugin.version>1.0.1</copy-rename-maven-plugin.version>
    <maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
    <maven-project-info-reports-plugin.version>3.6.2</maven-project-info-reports-plugin.version>
    <maven-site-plugin.version>3.12.1</maven-site-plugin.version>
    <pitest-maven.version>1.16.2</pitest-maven.version>
    <pitest-junit5-plugin.version>1.2.1</pitest-junit5-plugin.version>
    <pitest.skip>false</pitest.skip>

    <spring-boot.version>3.3.2</spring-boot.version>
    <hibernate.search.version>7.2.0.Final</hibernate.search.version>
    <hibernate.orm.version>6.6.0.Final</hibernate.orm.version>
    <jboss.logging.version>3.6.0.Final</jboss.logging.version>
    <spring-kafka.version>3.2.3</spring-kafka.version>
    <elasticsearch.client.version>8.15.0</elasticsearch.client.version>
    <micrometer.datasource.version>1.0.5</micrometer.datasource.version>
    <spring-cloud.version>2023.0.3</spring-cloud.version>
    <springdoc.version>2.6.0</springdoc.version>
    <swagger-annotations.version>2.2.22</swagger-annotations.version>
    <lombok.version>1.18.34</lombok.version> <!-- warning, depends on spring boot version and it is used in maven-compiler-plugin. If the version is not put, intellij does not compile -->
    <mapstruct.version>1.6.2</mapstruct.version>
    <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
    <redisson.hibernate.version>3.34.1</redisson.hibernate.version>
    <postgresql-connector.version>42.7.3</postgresql-connector.version>
    <awssdk.s3.version>2.27.6</awssdk.s3.version>
    <awssdk.sts.version>2.27.6</awssdk.sts.version>
    <slf4j.api.version>2.0.9</slf4j.api.version>
    <logback.version>1.5.6</logback.version>
    <awslambda-logback.version>1.0.0</awslambda-logback.version>
    <awslambda.java.events.version>3.13.0</awslambda.java.events.version>
    <awslambda.java.core.version>1.2.3</awslambda.java.core.version>
    <junit-pioneer.version>2.2.0</junit-pioneer.version>
  </properties>

  <developers>
    <developer>
      <name>Sergio Exposito</name>
      <email>sjexpos@gmail.com</email>
    </developer>
  </developers>

  <modules>
    <module>api</module>
    <module>db-scripts</module>
    <module>domain</module>
    <module>application</module>
    <module>infrastructure</module>
    <module>sdk</module>
    <module>uploads-detector</module>
    <module>.mvn-reports</module>
  </modules>

  <scm>
    <connection>scm:git:https://github.com/sjexpos/ecomm-users-service.git</connection>
    <developerConnection>scm:git:https://github.com/sjexpos/ecomm-users-service.git</developerConnection>
    <url>scm:git:https://github.com/sjexpos/ecomm-users-service.git</url>
    <tag>HEAD</tag>
  </scm>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/sjexpos/ecomm-users-service/issues</url>
  </issueManagement>

  <ciManagement>
    <system>GitHub</system>
    <url>https://github.com/sjexpos/ecomm-users-service/actions</url>
  </ciManagement>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.hibernate.search</groupId>
        <artifactId>hibernate-search-bom</artifactId>
        <version>${hibernate.search.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.hibernate.orm</groupId>
        <artifactId>hibernate-platform</artifactId>
        <version>${hibernate.orm.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.hibernate.orm</groupId>
        <artifactId>hibernate-core</artifactId>
        <version>${hibernate.orm.version}</version>
      </dependency>
      <dependency> <!-- It's needed for hibernate 6.6 -->
        <groupId>org.jboss.logging</groupId>
        <artifactId>jboss-logging</artifactId>
        <version>${jboss.logging.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.springframework.kafka</groupId>
        <artifactId>spring-kafka-bom</artifactId>
        <version>${spring-kafka.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.elasticsearch.client</groupId>
        <artifactId>elasticsearch-rest-client</artifactId>
        <version>${elasticsearch.client.version}</version>
      </dependency>
      <dependency>
        <groupId>org.elasticsearch.client</groupId>
        <artifactId>elasticsearch-rest-client-sniffer</artifactId>
        <version>${elasticsearch.client.version}</version>
      </dependency>

      <dependency>
        <groupId>net.ttddyy.observation</groupId>
        <artifactId>datasource-micrometer-spring-boot</artifactId>
        <version>${micrometer.datasource.version}</version>
      </dependency>

      <!-- Open API 3.0 (swagger) dependencies -->
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-common</artifactId>
        <version>${springdoc.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        <version>${springdoc.version}</version>
      </dependency>
      <dependency>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-annotations-jakarta</artifactId>
        <version>${swagger-annotations.version}</version>
      </dependency>

      <!-- Cloud Native Spring Admin connector -->
      <dependency>
        <groupId>de.codecentric</groupId>
        <artifactId>spring-boot-admin-starter-client</artifactId>
        <version>${spring-boot.version}</version>
      </dependency>

      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct-processor</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok-mapstruct-binding</artifactId>
        <version>${lombok-mapstruct-binding.version}</version>
      </dependency>
      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${postgresql-connector.version}</version>
      </dependency>
      <dependency>
        <groupId>org.hibernate.search</groupId>
        <artifactId>hibernate-search-mapper-pojo-base</artifactId>
        <version>${hibernate.search.version}</version>
      </dependency>
      <dependency>
        <groupId>org.hibernate.search</groupId>
        <artifactId>hibernate-search-mapper-orm</artifactId>
        <version>${hibernate.search.version}</version>
      </dependency>
      <dependency>
        <groupId>org.redisson</groupId>
        <artifactId>redisson-hibernate-6</artifactId>
        <version>${redisson.hibernate.version}</version>
      </dependency>
      <dependency>
        <groupId>software.amazon.awssdk</groupId>
        <artifactId>s3</artifactId>
        <version>${awssdk.s3.version}</version>
      </dependency>
      <dependency>
        <groupId>software.amazon.awssdk</groupId>
        <artifactId>sts</artifactId>
        <version>${awssdk.sts.version}</version>
      </dependency>
      <dependency>
        <groupId>io.oigres.ecomm</groupId>
        <artifactId>users-service-db-scripts</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.oigres.ecomm</groupId>
        <artifactId>users-service-domain</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.oigres.ecomm</groupId>
        <artifactId>users-service-application</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.oigres.ecomm</groupId>
        <artifactId>users-service-persistence</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.oigres.ecomm</groupId>
        <artifactId>users-service-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.oigres.ecomm</groupId>
        <artifactId>users-service-rest-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.oigres.ecomm</groupId>
        <artifactId>users-service-spring-boot</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.oigres.ecomm</groupId>
        <artifactId>users-service-sdk</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.oigres.ecomm</groupId>
        <artifactId>users-service-uploads-detector</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.api.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jlib</groupId>
        <artifactId>jlib-awslambda-logback</artifactId>
        <version>${awslambda-logback.version}</version>
      </dependency>
      <dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>aws-lambda-java-events</artifactId>
        <version>${awslambda.java.events.version}</version>
      </dependency>
      <dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>aws-lambda-java-core</artifactId>
        <version>${awslambda.java.core.version}</version>
      </dependency>

      <dependency>
        <groupId>org.junit-pioneer</groupId>
        <artifactId>junit-pioneer</artifactId>
        <version>${junit-pioneer.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit-pioneer</groupId>
      <artifactId>junit-pioneer</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>build-helper-maven-plugin</artifactId>
      <version>${build-helper-maven-plugin.version}</version>
      <type>maven-plugin</type>
    </dependency>
  </dependencies>
  
  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <includes><include>**/*</include></includes>
        <excludes><exclude>**/.git</exclude></excludes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <includes><include>**/*</include></includes>
        <excludes><exclude>**/.git</exclude></excludes>
      </testResource>
    </testResources>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>${spotless-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.basepom.maven</groupId>
          <artifactId>duplicate-finder-maven-plugin</artifactId>
          <version>${duplicate-finder-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.gaul</groupId>
          <artifactId>modernizer-maven-plugin</artifactId>
          <version>${modernizer-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>${spotbugs-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven-dependency-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-report-plugin</artifactId>
          <version>${maven-surefire-report-plugin.version}</version>
          <configuration>
            <alwaysGenerateSurefireReport>true</alwaysGenerateSurefireReport>
            <alwaysGenerateFailsafeReport>true</alwaysGenerateFailsafeReport>
          </configuration>
          <executions>
            <execution>
              <id>unit-tests</id>
              <phase>test</phase>
              <goals>
                <goal>report-only</goal>
              </goals>
            </execution>
            <execution>
              <id>integration-tests</id>
              <phase>integration-test</phase>
              <goals>
                <goal>report-only</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven-failsafe-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.flywaydb</groupId>
          <artifactId>flyway-maven-plugin</artifactId>
          <version>${flyway-maven-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>org.flywaydb</groupId>
              <artifactId>flyway-database-postgresql</artifactId>
              <version>${flyway-maven-plugin.version}</version>
            </dependency>
            <dependency>
              <groupId>org.postgresql</groupId>
              <artifactId>postgresql</artifactId>
              <version>${postgresql-connector.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${maven-assembly-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>pl.project13.maven</groupId>
          <artifactId>git-commit-id-plugin</artifactId>
          <version>${git-commit-id-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${build-helper-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
          <configuration>
            <output>file</output>
            <append>true</append>
          </configuration>
          <executions>
            <execution>
              <id>jacoco-initialize</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>jacoco-initialize-integration</id>
              <goals>
                <goal>prepare-agent-integration</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.pitest</groupId>
          <artifactId>pitest-maven</artifactId>
          <version>${pitest-maven.version}</version>
          <configuration>
            <jvmArgs>
              <jvmArg>-XX:TieredStopAtLevel=1</jvmArg>
            </jvmArgs>
            <mutators>
              <!-- Defauls -->
              <mutator>CONDITIONALS_BOUNDARY</mutator>
              <mutator>INCREMENTS</mutator>
              <mutator>INVERT_NEGS</mutator>
              <mutator>MATH</mutator>
              <mutator>NEGATE_CONDITIONALS</mutator>
              <mutator>VOID_METHOD_CALLS</mutator>
              <mutator>EMPTY_RETURNS</mutator>
              <mutator>FALSE_RETURNS</mutator>
              <mutator>TRUE_RETURNS</mutator>
              <mutator>NULL_RETURNS</mutator>
              <mutator>PRIMITIVE_RETURNS</mutator>
              <!-- Optionals -->
              <mutator>CONSTRUCTOR_CALLS</mutator>
              <mutator>INLINE_CONSTS</mutator>
              <mutator>NON_VOID_METHOD_CALLS</mutator>
              <mutator>REMOVE_CONDITIONALS_EQUAL_IF</mutator>
              <mutator>REMOVE_CONDITIONALS_EQUAL_ELSE</mutator>
              <mutator>REMOVE_CONDITIONALS_ORDER_IF</mutator>
              <mutator>REMOVE_CONDITIONALS_ORDER_ELSE</mutator>
              <mutator>REMOVE_INCREMENTS</mutator>
              <!-- Experimental -->
              <mutator>EXPERIMENTAL_ARGUMENT_PROPAGATION</mutator>
              <mutator>EXPERIMENTAL_BIG_DECIMAL</mutator>
              <mutator>EXPERIMENTAL_BIG_INTEGER</mutator>
              <mutator>EXPERIMENTAL_NAKED_RECEIVER</mutator>
              <mutator>EXPERIMENTAL_MEMBER_VARIABLE</mutator>
              <mutator>EXPERIMENTAL_SWITCH</mutator>
            </mutators>
            <mutationThreshold>0</mutationThreshold>
            <exportLineCoverage>true</exportLineCoverage>
            <skip>${pitest.skip}</skip>
            <timestampedReports>false</timestampedReports>
            <outputFormats><value>XML</value><value>HTML</value></outputFormats>
            <verbose>false</verbose> <!-- Set to true for noisy output -->
            <verbosity>NO_SPINNER</verbosity> <!-- For CI -->
            <withHistory>true</withHistory>
          </configuration>
          <executions>
            <execution>
              <id>pitest-mutation-coverage</id>
              <phase>verify</phase>
              <goals>
                <goal>mutationCoverage</goal>
              </goals>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>org.pitest</groupId>
              <artifactId>pitest-junit5-plugin</artifactId>
              <version>${pitest-junit5-plugin.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>${fabric8-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring-boot-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>com.coderplus.maven.plugins</groupId>
          <artifactId>copy-rename-maven-plugin</artifactId>
          <version>${copy-rename-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${maven-antrun-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven-deploy-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>${maven-project-info-reports-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>${maven.version}</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>${maven.compiler.source}</version>
                </requireJavaVersion>                            
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <configuration>
          <java>
            <includes>
              <include>src/main/java/**/*.java</include>
              <include>src/test/java/**/*.java</include>
            </includes>
            <googleJavaFormat>
              <reflowLongStrings>true</reflowLongStrings>
              <formatJavadoc>false</formatJavadoc>
            </googleJavaFormat>
            <licenseHeader>
              <file>./license-header.txt</file>
            </licenseHeader>
            <importOrder/>
            <removeUnusedImports />
            <formatAnnotations />
            <endWithNewline />
          </java>
        </configuration>
        <executions>
          <execution>
            <id>apply-checkstyle</id>
            <phase>validate</phase>
            <goals>
              <goal>apply</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.basepom.maven</groupId>
        <artifactId>duplicate-finder-maven-plugin</artifactId>
        <configuration>
          <checkCompileClasspath>true</checkCompileClasspath>
          <checkRuntimeClasspath>true</checkRuntimeClasspath>
          <checkTestClasspath>true</checkTestClasspath>
          <failBuildInCaseOfEqualContentConflict>true</failBuildInCaseOfEqualContentConflict>
          <failBuildInCaseOfConflict>true</failBuildInCaseOfConflict>
          <ignoredDependencies>
            <dependency>
              <groupId>org.springframework</groupId>
              <artifactId>spring-jcl</artifactId>
            </dependency>
            <dependency>
              <groupId>org.springframework</groupId>
              <artifactId>spring-aop</artifactId>
            </dependency>
            <dependency>
              <groupId>jakarta.servlet</groupId>
              <artifactId>jakarta.servlet-api</artifactId>
            </dependency>
          </ignoredDependencies>
          <ignoredResourcePatterns>COPYRIGHT.txt</ignoredResourcePatterns>
        </configuration>
        <executions>
          <execution>
            <id>run-duplicate-finder</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.gaul</groupId>
        <artifactId>modernizer-maven-plugin</artifactId>
        <configuration>
          <javaVersion>${maven.compiler.source}</javaVersion>
          <failOnViolations>true</failOnViolations>
        </configuration>
        <executions>
          <execution>
            <id>run-modernizer</id>
            <phase>verify</phase>
            <goals>
              <goal>modernizer</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <configuration>
          <excludeFilterFile>spotbugs-exclude.xml</excludeFilterFile>
          <jvmArgs>-Dfindbugs.assertionmethods=org.apache.commons.lang3.Validate.notNull</jvmArgs>
          <failOnError>true</failOnError>
          <htmlOutput>true</htmlOutput>
        </configuration>
        <executions>
          <execution>
            <id>run-spotbugs</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
          <parameters>true</parameters> <!-- store method argument names on byte code. Useful for spring SPEL -->
          <annotationProcessorPaths>
            <!-- The order in those processors are important. If not mapstruct would work bad together lombok -->
            <path>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-configuration-processor</artifactId>
            </path>
            <path>
              <groupId>org.hibernate.orm</groupId>
              <artifactId>hibernate-jpamodelgen</artifactId>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </path>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok-mapstruct-binding</artifactId>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>parse-version</id>
            <phase>validate</phase>
            <goals>
              <goal>parse-version</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <tagNameFormat>v@{project.version}</tagNameFormat>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <updateWorkingCopyVersions>true</updateWorkingCopyVersions>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-reports</id>
            <phase>site</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <mkdir dir="${maven.multiModuleProjectDirectory}/target/site/${project.artifactId}"/>
                <copy  todir="${maven.multiModuleProjectDirectory}/target/site/${project.artifactId}">
                  <fileset dir="target/site" includes="**/*" erroronmissingdir="false"/>
                  <fileset dir="target" includes="spotbugs.html" erroronmissingdir="false"/>
                </copy>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>index</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

</project>

